%   Tests the factorization generated by matrix-factor mex file.
% 
%   No parameters are needed. Currently this script only tests
%   the following matrices:
%       aug3dcqp.mtx
%       bloweya.mtx
%       bratu3d.mtx
%       tuma1.mtx
%       tuma2.mtx
%       1138_bus.mtx
%
%   Outputs for each test case:
%       The fill factor (nnz(L+D+L')/nnz(A))
%       The number of iterations for GMRES to converge.

display('==============starting tests================');
warning off;
% testmats = [];
% for i = 1:8
%     testmats = [testmats; strcat('testmat', num2str(i))];
% end
% testmats = cellstr(testmats);
% 
% Lshape_mats = [];
% for i = 1:4
%     Lshape_mats = [Lshape_mats; strcat('Lshape_matrices', num2str(i))];
% end
% Lshape_mats = cellstr(Lshape_mats);
% 
% homogenous_mats = [];
% for i = 1:4
%     homogenous_mats = [homogenous_mats; strcat('matrices_homogeneous', num2str(i))];
% end
% homogenous_mats = cellstr(homogenous_mats);

%{
other_mats = { 'extra_matrices/turon_m'; 'tuma1'; 'tuma2';  ...
               'extra_matrices/mario001'; 'extra_matrices/stokes64'; ...
               'extra_matrices/stokes128'; 'extra_matrices/sit100'; ...
               'extra_matrices/qpband'; 'extra_matrices/ncvxqp9'; ...
               'extra_matrices/brainpc2'};
%}

all_mats = { 'aug3dcqp'; 'bloweya'; 'bratu3d'; ...
            'tuma1'; 'tuma2'; '1138_bus'; 'Lshape_matrices4'; 'lund_b'};
        
opts.fill_factor = 2.2;
opts.tol = 0.001;

%all_mats = {'c-55'; 'c-59'; 'c-63'; 'c-68'; 'c-69'; 'c-70'; 'c-71'; 'c-72'};
%lfil = [12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 12.0, 3.0, 1.0];
%tol = [0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003];
opts.pp_tol = 1.0;
opts.ordering = 'amd';
opts.equil = 'bunch';
for i = 1:length(all_mats)
    mat_name = all_mats{i};
    fprintf('Now testing %s:\n', mat_name);
    base = '';
    file = strcat(base, mat_name, '.mtx');
    A = mmread(file);
    %A = A(1:end-2, 1:end-2);
    
    opts.fill_factor = opts.fill_factor;
    opts.tol = opts.tol;
    [l d p S B] = ildl(A, opts.fill_factor, opts.tol, ...
                       opts.pp_tol, opts.ordering, opts.equil);
   
    fprintf('The relative residual is %f.\n', norm(B - l*d*l', 1)/norm(B, 1));
    fprintf('The fill factor is %.3f.\n', nnz(l+d+l')/nnz(B));
    fprintf('The largest elem. of L is %.3f.\n', full(max(max(abs(l)))));
	fprintf('A has %i nnz.\n', nnz(A));
    fprintf('The condition number is %e.\n', condest(B));

    %C = S*A*S;
    %B = C(p,p);
    
    %b = mmread(strcat(base, mat_name, '_b.mtx'));
    %b = S^(-1)*b;
    %b = b(p);
    
    e = ones(size(B,1),1);
    b = S^(-1)*e;
    %[y, flag, relres, iter, resvec] = ...
        ld = @(x) d\(l\x);
        gmres(B,b,min(100,size(B,1)),1e-8,10,ld,l');

    %{
    keyboard;
    opts.shift_factor = 0.0001;
    opts.ordering = 'none';
    opts.equil = 'n';
    opts.pp_tol = 0.0;
    [l d p S B] = shifted_ildl(B, opts);
    C = S*B*S;
    B = C(p,p);
    keyboard;
    gmres(B,b,min(80,size(B,1)),1e-8,1,l*d, l',y(p));
    %}
    %semilogy(1:length(resvec), resvec/norm(b), 'r-');
    %fprintf('num iter: %d\n', (iter(1)-1)*100 + iter(2));
    %xlabel('iteration');
    %ylabel('relative residual');
    fprintf('\n');
end

warning on;
display('================ending tests================');
