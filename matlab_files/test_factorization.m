%tests the factorization generated by matrix-factor
clc; %warning off;
mat_names = [];
for i = 1:8
    mat_names = [mat_names; strcat('testmat', num2str(i))];
end
mat_names = cellstr(mat_names);
other_mats = { 'aug3dcqp'; 'bloweya_rcm_perm'; 'bratu3d'; ...
            'tuma1_rcm_perm'; 'tuma2_rcm_perm'; '1138_bus'};

% for i = 1:length(other_mats)
%     other_mats{i} = strcat(other_mats{i}, '_rcm_perm');
% end

all_mats = mat_names;
        
lfil = 3;
tol = 0.00;
for i = 1:length(all_mats)
    mat_name = all_mats{i};
    fprintf('Now testing %s:\n', mat_name);
    base = '';
    file = strcat(base, mat_name, '.mtx');
    %base = 'C:\Users\Paul\Documents\My Dropbox\Online Resources\My
    %Homework\UBC 2011W\NSERC\matrix-factor-recode\';

    cmd = horzcat('ldl_driver ', num2str(lfil), ' ', num2str(tol), ... 
                 ' test_matrices/', file, ' -y -n');
    [~, ~] = system(cmd);

    %A = mmread(file);
    B = mmread(strcat(base, 'outA.mtx')); 
        
    S = mmread(strcat(base, 'outS.mtx'));
    l = mmread(strcat(base, 'outL.mtx'));
    d = mmread(strcat(base, 'outD.mtx'));
    p = mmread(strcat(base, 'outPerm.mtx'));
    p = diag(p)+1;
   
    fprintf('The relative residual is %d.\n', norm(B - l*d*l', 1)/norm(B, 1));
    fprintf('The fill factor is %.3f.\n', nnz(l+d+l')/nnz(B));
    fprintf('The condition number is %d.\n', condest(B));

    %spy(A(p,p)); figure; spy(abs(l*d*l') > 1e-8);
    %spy(B); figure; spy(A(p,p));
    
    e = ones(size(B,1),1);
    %gmres(B,e,min(60,size(B,1)),1e-8,4,l*d, l');
    %gmres(A,e,30,1e-8,2);
    fprintf('\n');
end

%warning on;
