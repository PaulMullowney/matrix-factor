%tests the factorization generated by matrix-factor
display('==============starting tests================');
warning off;
testmats = [];
for i = 1:8
    testmats = [testmats; strcat('testmat', num2str(i))];
end
testmats = cellstr(testmats);

Lshape_mats = [];
for i = 1:4
    Lshape_mats = [Lshape_mats; strcat('Lshape_matrices', num2str(i))];
end
Lshape_mats = cellstr(Lshape_mats);

homogenous_mats = [];
for i = 1:4
    homogenous_mats = [homogenous_mats; strcat('matrices_homogeneous', num2str(i))];
end
homogenous_mats = cellstr(homogenous_mats);

other_mats = { 'aug3dcqp'; 'bloweya'; 'bratu3d'; ...
            'stokes64'; 'tuma1'; 'tuma2'; '1138_bus'};

%aug3dcqp has a terrible condition number
all_mats = [testmats; Lshape_mats; homogenous_mats; other_mats];
        
lfil = 1.1;
tol = 0.001;
for i = 1:length(all_mats)
    mat_name = all_mats{i};
    fprintf('Now testing %s:\n', mat_name);
    base = '';
    file = strcat(base, mat_name, '.mtx');
    %base = 'C:\Users\Paul\Documents\My Dropbox\Online Resources\My
    %Homework\UBC 2011W\NSERC\matrix-factor-recode\';

    cmd = horzcat('ldl_driver ', num2str(lfil), ' ', num2str(tol), ... 
                 ' test_matrices/', file, ' -y -n');
    [~, ~] = system(cmd);

    %A = mmread(file);
    B = mmread(strcat(base, 'outA.mtx')); 
        
    S = mmread(strcat(base, 'outS.mtx'));
    l = mmread(strcat(base, 'outL.mtx'));
    d = mmread(strcat(base, 'outD.mtx'));
    p = mmread(strcat(base, 'outPerm.mtx'));
    p = diag(p);
   
    fprintf('The relative residual is %d.\n', norm(B - l*d*l', 1)/norm(B, 1));
    fprintf('The fill factor is %.3f.\n', nnz(l+d+l')/nnz(B));
    fprintf('The condition number is %d.\n', condest(B));

    %spy(A(p,p)); figure; spy(abs(l*d*l') > 1e-8);
    %spy(B); figure; spy(A(p,p));
    
    e = ones(size(B,1),1);
    %[y, flag, relres, iter, resvec] = ...
        gmres(B,S*e,min(60,size(B,1)),1e-8,3,l*d, l');
    
    %semilogy(1:length(resvec), resvec, 'r-');

    %xlabel('iteration');
    %ylabel('relative residual');
    fprintf('\n');
end

warning on;
display('================ending tests================');
